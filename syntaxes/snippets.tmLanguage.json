{
	"$schema": "https://raw.githubusercontent.com/RedCMD/TmLanguage-Syntax-Highlighter/main/vscode.tmLanguage.schema.json",
	"name": "JSON Snippets",
	"scopeName": "source.json.comments.snippets",
	"patterns": [
		{ "include": "#root" },
		{ "include": "#body" },
		{ "include": "#value" },
		{
			"begin": "\\A(?= *\\$)",
			"end": "(?!\\G)",
			"applyEndPatternLast": 1,
			"name": "meta.embedded.json.comments.snippets.snippets string.quoted.double.json.comments.snippets",
			"patterns": [ { "include": "#any" } ]
		}
	],
	"repository": {
		"root": {
			"begin": "{",
			"beginCaptures": { "0": { "name": "punctuation.definition.dictionary.begin.json.comments.snippets" } },
			"end": "}",
			"endCaptures": { "0": { "name": "punctuation.definition.dictionary.end.json.comments.snippets" } },
			"name": "meta.structure.dictionary.json.comments.snippets",
			"patterns": [
				{
					"begin": ":",
					"beginCaptures": { "0": { "name": "punctuation.separator.dictionary.key-value.json.comments.snippets" } },
					"end": ",|(?=})",
					"endCaptures": { "0": { "name": "punctuation.separator.dictionary.pair.json.comments.snippets" } },
					"name": "meta.structure.dictionary.value.json.comments.snippets",
					"patterns": [
						{
							"begin": "{",
							"beginCaptures": { "0": { "name": "punctuation.definition.dictionary.begin.json.comments.snippets" } },
							"end": "}",
							"endCaptures": { "0": { "name": "punctuation.definition.dictionary.end.json.comments.snippets" } },
							"name": "meta.structure.dictionary.json.comments.snippets",
							"patterns": [
								{ "include": "#body" },
								{ "include": "#objectpair" }
							]
						},
						{
							"comment": "the JSON object value",
							"include": "#value"
						},
						{
							"match": "\\S",
							"name": "invalid.illegal.expected-dictionary-separator.json.comments.snippets"
						}
					]
				},
				{ "include": "#objectpair" }
			]
		},
		"body": {
			"begin": "(?<=\"body\")(?!})",
			"end": "(?<=,)|(?=})",
			"patterns": [
				{ "include": "#comments" },
				{
					"begin": ":",
					"beginCaptures": { "0": { "name": "punctuation.separator.dictionary.key-value.json.comments.snippets" } },
					"end": ",|(?=})",
					"endCaptures": { "0": { "name": "punctuation.separator.dictionary.pair.json.comments.snippets" } },
					"name": "meta.structure.dictionary.value.json.comments.snippets",
					"patterns": [
						{ "include": "#body-string" },
						{
							"begin": "\\[",
							"beginCaptures": { "0": { "name": "punctuation.definition.array.begin.json.comments.snippets" } },
							"end": "]",
							"endCaptures": { "0": { "name": "punctuation.definition.array.end.json.comments.snippets" } },
							"name": "meta.structure.array.json.comments.snippets",
							"patterns": [
								{ "include": "#body-string" },
								{ "include": "#value" },
								{
									"match": ",",
									"name": "punctuation.separator.array.json.comments.snippets"
								},
								{
									"match": "\\S",
									"name": "invalid.illegal.expected-array-separator.json.comments.snippets"
								}
							]
						},
						{
							"comment": "the JSON object value",
							"include": "#value"
						},
						{
							"match": "\\S",
							"name": "invalid.illegal.expected-dictionary-separator.json.comments.snippets"
						}
					]
				},
				{
					"match": "\\S",
					"name": "invalid.illegal.expected-dictionary-separator.json.comments.snippets"
				}
			]
		},
		"body-string": {
			"begin": "\"",
			"beginCaptures": { "0": { "name": "punctuation.definition.string.begin.json.comments.snippets" } },
			"end": "\"",
			"endCaptures": { "0": { "name": "punctuation.definition.string.end.json.comments.snippets" } },
			"name": "meta.embedded.json.comments.snippets.snippets string.quoted.double.json.comments.snippets",
			"patterns": [ { "include": "#any" } ]
		},
		"any": {
			"begin": "(?=(?<any>\\\\{4}++|\\\\{2}[$}]|\\\\.|\\$[0-9]++|\\$[_a-zA-Z0-9]++)|\\${(?>0*+[1-9][0-9]*+\\|(?!,)(?>[^\\\\\",|]++|\\\\{4}++|\\\\{2}[,|]|\\\\.|,(?![,|]))++\\||(?>[0-9]++|[_a-zA-Z0-9]++)(?>:(?>[^\\\\\"$}]++|\\g<any>++|\\$)*+|\\\\?+/(?>[^\\\\\"/]++|\\\\{4,2}/|\\\\{4}++|\\\\[^/])*+(?>(?<=\\\\)\\\\?+/)?+\\\\?+/(?>[^\\\\\"/$]++|\\\\{4}++|\\\\{3,2}/|\\\\[^/]|\\${[0-9]++(?>:/[_a-zA-Z][_a-zA-Z0-9]*+|:(?>\\?(?>[^\\\\\":}]++|\\\\{4}++|\\\\{2}[$}]|\\\\[^\\\\])++:|(?![?/])[+-]?+)(?>[^\\\\\"}]++|\\\\{4}++|\\\\{2}[$}]|\\\\[^\\\\])++)?+}|\\$(?!{[0-9]++:/[^}]))*+\\\\?+/(?>(?<flag>[dgimsvy])(?![dgimsvy]*?\\k<flag+0>))*+)?+)})",
			"end": "(?!\\G)",
			"patterns": [
				{
					"match": "(\\\\{2})[$}]",
					"captures": { "1": { "name": "constant.character.escape.json.comments.snippets" } }
				},
				{
					"match": "(\\\\{3})\\\\",
					"captures": { "1": { "name": "constant.character.escape.json.comments.snippets" } }
				},
				{ "include": "#stringcontent" },
				{ "include": "#tabstop" },
				{ "include": "#choice" },
				{ "include": "#placeholder" }
			]
		},
		"tabstop": {
			"comment": "$0 $TM_SELECTED_TEXT $_azAZ09",
			"match": "\\G(\\$)(?>([0-9]++)|((?>TM_(?>SELECTED_TEXT|CURRENT_(?>LINE|WORD)|LINE_(?>INDEX|NUMBER)|FILENAME(?>_BASE)?+|DIRECTORY|FILEPATH)|RELATIVE_FILEPATH|SELECTION|CLIPBOARD|WORKSPACE_(?>NAME|FOLDER)|CURSOR_(?>INDEX|NUMBER)|CURRENT_(?>YEAR(?>_SHORT)?+|MONTH(?>_NAME(?>_SHORT)?+)?+|DATE|DAY_NAME(?>_SHORT)?+|HOUR|MINUTE|SECOND(?>S_UNIX)?+|TIMEZONE_OFFSET)|RANDOM(?>_HEX)?+|UUID|BLOCK_COMMENT_(?>START|END)|LINE_COMMENT)(?![_a-zA-Z0-9]))|([_a-zA-Z0-9]++))",
			"captures": {
				"0": { "name": "meta.embedded.tabstop.json.comments.snippets" },
				"1": { "name": "keyword.other.json.comments.snippets punctuation.definition.tabstop.json.comments.snippets" },
				"2": { "name": "constant.numeric.tabstop.json.comments.snippets" },
				"3": { "name": "variable.language.json.comments.snippets" },
				"4": { "name": "variable.other.json.comments.snippets" }
			}
		},
		"choice": {
			"comment": "${1|a,b,c|} ${020|choice,\\,,\\||}",
			"begin": "\\G(\\${)(0*+[1-9][0-9]*+)(\\|)",
			"end": "(\\|)(})|$|(?=\")",
			"beginCaptures": {
				"1": { "name": "keyword.other.json.comments.snippets punctuation.definition.choice.begin.json.comments.snippets" },
				"2": { "name": "constant.numeric.tabstop.json.comments.snippets" },
				"3": { "name": "punctuation.definition.enum.choice.begin.json.comments.snippets" }
			},
			"endCaptures": {
				"1": { "name": "punctuation.definition.enum.choice.end.json.comments.snippets" },
				"2": { "name": "keyword.other.json.comments.snippets punctuation.definition.choice.end.json.comments.snippets" }
			},
			"name": "meta.embedded.choice.json.comments.snippets",
			"contentName": "variable.other.enummember.choice.string.json.comments.snippets",
			"patterns": [
				{
					"match": ",",
					"name": "keyword.operator.json.comments.snippets punctuation.separator.choice.comma.json.comments.snippets"
				},
				{
					"match": "(\\\\{2})[|,]",
					"captures": { "1": { "name": "constant.character.escape.choice.json.comments.snippets" } }
				},
				{
					"match": "(\\\\{3})\\\\",
					"captures": { "1": { "name": "constant.character.escape.json.comments.snippets" } }
				},
				{ "include": "#stringcontent" }
			]
		},
		"placeholder": {
			"comment": "${2} ${variable} ${3:placeholder} ${transform/regex/format/options}",
			"begin": "\\G(\\${)(?>([0-9]++)|((?>TM_(?>SELECTED_TEXT|CURRENT_(?>LINE|WORD)|LINE_(?>INDEX|NUMBER)|FILENAME(?>_BASE)?+|DIRECTORY|FILEPATH)|RELATIVE_FILEPATH|SELECTION|CLIPBOARD|WORKSPACE_(?>NAME|FOLDER)|CURSOR_(?>INDEX|NUMBER)|CURRENT_(?>YEAR(?>_SHORT)?+|MONTH(?>_NAME(?>_SHORT)?+)?+|DATE|DAY_NAME(?>_SHORT)?+|HOUR|MINUTE|SECOND(?>S_UNIX)?+|TIMEZONE_OFFSET)|RANDOM(?>_HEX)?+|UUID|BLOCK_COMMENT_(?>START|END)|LINE_COMMENT))(?![_a-zA-Z0-9])|([_a-zA-Z0-9]++))",
			"end": "}|$|(?=\")",
			"beginCaptures": {
				"1": { "name": "keyword.other.json.comments.snippets punctuation.definition.placeholder.begin.json.comments.snippets" },
				"2": { "name": "constant.numeric.tabstop.json.comments.snippets" },
				"3": { "name": "variable.language.json.comments.snippets" },
				"4": { "name": "variable.other.json.comments.snippets" }
			},
			"endCaptures": { "0": { "name": "keyword.other.json.comments.snippets punctuation.definition.placeholder.end.json.comments.snippets" } },
			"name": "meta.embedded.placeholder.json.comments.snippets",
			"patterns": [
				{
					"comment": "placeholder",
					"begin": ":",
					"end": "(?=}|$|\")",
					"beginCaptures": { "0": { "name": "punctuation.separator.placeholder.json.comments.snippets" } },
					"contentName": "string.quoted.double.json.comments.snippets",
					"patterns": [ { "include": "#any" } ]
				},
				{
					"comment": "VSCode TextMate bug. Including a grammar from within a capture group doesn't load the include. We have to pre-load the include outside of the capture group. https://github.com/microsoft/vscode-textmate/issues/242",
					"include": "source.json.textmate.regexp#_pre-load_"
				},
				{
					"comment": "/regex/format/options",
					"begin": "((\\\\)?+/)((?>[^\\\\\"/]++|\\\\{4,2}/|\\\\{4}++|\\\\[^/])*+(?>(?<=\\\\)\\\\?+/)?+)((\\\\)?+/)",
					"end": "((\\\\)?+/)([dgimsvy]*+)",
					"beginCaptures": {
						"1": { "name": "punctuation.definition.regex.begin.json.comments.snippets" },
						"2": { "name": "constant.character.escape.regex.json.comments.snippets" },
						"3": {
							"name": "meta.embedded.json.regexp",
							"patterns": [
								{
									"match": "(\\\\{4})/",
									"captures": { "1": { "name": "constant.character.escape.regex.tm" } }
								},
								{ "include": "source.json.textmate.regexp" },
								{
									"match": "(\\\\{3})\\\\",
									"captures": { "1": { "name": "constant.character.escape.json.comments.snippets" } }
								},
								{
									"comment": "Fallback if `source.json.textmate.regexp` fails",
									"include": "#stringcontent"
								}
							]
						},
						"4": { "name": "punctuation.definition.regex.end.json.comments.snippets" },
						"5": { "name": "constant.character.escape.regex.json.comments.snippets" }
					},
					"endCaptures": {
						"1": { "name": "punctuation.definition.regex.json.comments.snippets" },
						"2": { "name": "constant.character.escape.regex.json.comments.snippets" },
						"3": { "name": "keyword.other.flag.json.comments.snippets" }
					},
					"name": "string.regexp.json.comments.snippets",
					"contentName": "string.interpolated.json.comments.snippets",
					"patterns": [
						{
							"comment": "$0 $1 $0009999",
							"match": "(\\$)([0-9]++)",
							"captures": {
								"0": { "name": "meta.embedded.capture.json.comments.snippets" },
								"1": { "name": "keyword.other.json.comments.snippets punctuation.definition.capture.json.comments.snippets" },
								"2": { "name": "constant.numeric.capture.json.comments.snippets" }
							}
						},
						{
							"comment": "${2} ${3:/downcase} ${4:+if} ${5:?if:else} ${6:-else} ${7:else}",
							"begin": "(\\${)([0-9]++)(:(?=/[_a-zA-Z][_a-zA-Z0-9]*+}|(?>\\?(?>[^\\\\\":}]++|\\\\{4}++|\\\\{2}[$}]|\\\\[^\\\\])++:|(?![?/])[+-]?+)(?>[^\\\\\"}]++|\\\\{4}++|\\\\{2}[$}]|\\\\[^\\\\])++})|(?=}))",
							"end": "}",
							"beginCaptures": {
								"1": { "name": "keyword.other.json.comments.snippets punctuation.definition.format.begin.json.comments.snippets" },
								"2": { "name": "constant.numeric.capture.json.comments.snippets" },
								"3": { "name": "punctuation.separator.format.colon.json.comments.snippets" }
							},
							"endCaptures": { "0": { "name": "variable.language.json.comments.snippets punctuation.definition.format.end.json.comments.snippets" } },
							"name": "meta.embedded.format.json.comments.snippets",
							"contentName": "string.quoted.double.json.comments.snippets",
							"patterns": [
								{
									"match": "\\G(\\\\)?(/(?>capitalize|(?>up|down|camel|pascal)case|([^}]++)))(?=})",
									"captures": {
										"1": { "name": "constant.character.escape.format.json.comments.snippets" },
										"2": { "name": "markup.bold.case.json.comments.snippets" },
										"3": { "name": "invalid.illegal.json.comments.snippets" }
									}
								},
								{
									"match": "\\G\\+",
									"name": "keyword.operator.json.comments.snippets punctuation.definition.format.if.json.comments.snippets"
								},
								{
									"match": "\\G-",
									"name": "keyword.operator.json.comments.snippets punctuation.definition.format.else.json.comments.snippets"
								},
								{
									"begin": "\\G\\?",
									"end": ":",
									"beginCaptures": { "0": { "name": "keyword.operator.json.comments.snippets punctuation.definition.format.if.begin.json.comments.snippets" } },
									"endCaptures": { "0": { "name": "keyword.operator.json.comments.snippets punctuation.definition.format.if.end.json.comments.snippets" } },
									"contentName": "string.quoted.double.json.comments.snippets",
									"patterns": [
										{
											"match": "(\\\\{3})\\\\",
											"captures": { "1": { "name": "constant.character.escape.json.comments.snippets" } }
										},
										{ "include": "#stringcontent" }
									]
								},
								{
									"match": "(\\\\{2})}",
									"captures": { "1": { "name": "constant.character.escape.format.json.comments.snippets" } }
								},
								{
									"match": "(\\\\{3})\\\\",
									"captures": { "1": { "name": "constant.character.escape.json.comments.snippets" } }
								},
								{ "include": "#stringcontent" }
							]
						},
						{
							"match": "(\\\\{3,2})/",
							"captures": { "1": { "name": "constant.character.escape.format.json.comments.snippets" } }
						},
						{
							"match": "(\\\\{3})\\\\",
							"captures": { "1": { "name": "constant.character.escape.json.comments.snippets" } }
						},
						{ "include": "#stringcontent" }
					]
				}
			]
		},
		"value": {
			"patterns": [
				{ "include": "#constant" },
				{ "include": "#number" },
				{ "include": "#string" },
				{ "include": "#array" },
				{ "include": "#object" },
				{ "include": "#comments" }
			]
		},
		"object": {
			"begin": "{",
			"beginCaptures": { "0": { "name": "punctuation.definition.dictionary.begin.json.comments.snippets" } },
			"end": "}",
			"endCaptures": { "0": { "name": "punctuation.definition.dictionary.end.json.comments.snippets" } },
			"name": "meta.structure.dictionary.json.comments.snippets",
			"patterns": [ { "include": "#objectpair" } ]
		},
		"objectpair": {
			"patterns": [
				{
					"comment": "the JSON object key",
					"include": "#objectkey"
				},
				{ "include": "#comments" },
				{
					"begin": ":",
					"beginCaptures": { "0": { "name": "punctuation.separator.dictionary.key-value.json.comments.snippets" } },
					"end": ",|(?=})",
					"endCaptures": { "0": { "name": "punctuation.separator.dictionary.pair.json.comments.snippets" } },
					"name": "meta.structure.dictionary.value.json.comments.snippets",
					"patterns": [
						{
							"comment": "the JSON object value",
							"include": "#value"
						},
						{
							"match": "\\S",
							"name": "invalid.illegal.expected-dictionary-separator.json.comments.snippets"
						}
					]
				},
				{
					"match": "\\S",
					"name": "invalid.illegal.expected-dictionary-separator.json.comments.snippets"
				}
			]
		},
		"objectkey": {
			"begin": "\"",
			"beginCaptures": { "0": { "name": "punctuation.support.type.property-name.begin.json.comments.snippets" } },
			"end": "\"",
			"endCaptures": { "0": { "name": "punctuation.support.type.property-name.end.json.comments.snippets" } },
			"name": "string.json.comments.snippets support.type.property-name.json.comments.snippets",
			"patterns": [ { "include": "#stringcontent" } ]
		},
		"array": {
			"begin": "\\[",
			"beginCaptures": { "0": { "name": "punctuation.definition.array.begin.json.comments.snippets" } },
			"end": "]",
			"endCaptures": { "0": { "name": "punctuation.definition.array.end.json.comments.snippets" } },
			"name": "meta.structure.array.json.comments.snippets",
			"patterns": [
				{ "include": "#value" },
				{
					"match": ",",
					"name": "punctuation.separator.array.json.comments.snippets"
				},
				{
					"match": "\\S",
					"name": "invalid.illegal.expected-array-separator.json.comments.snippets"
				}
			]
		},
		"string": {
			"begin": "\"",
			"beginCaptures": { "0": { "name": "punctuation.definition.string.begin.json.comments.snippets" } },
			"end": "\"",
			"endCaptures": { "0": { "name": "punctuation.definition.string.end.json.comments.snippets" } },
			"name": "string.quoted.double.json.comments.snippets",
			"patterns": [ { "include": "#stringcontent" } ]
		},
		"stringcontent": {
			"comment": "\\ \" \u0000",
			"patterns": [
				{
					"match": "(\\\\)[\\\\\"/]",
					"captures": { "1": { "name": "constant.character.escape.json.comments.snippets" } }
				},
				{
					"match": "\\\\[bfnrt]",
					"name": "constant.character.escape.json.comments.snippets"
				},
				{
					"match": "\\\\u(\\h{4})",
					"captures": {
						"0": { "name": "constant.character.escape.json.comments.snippets" },
						"1": { "name": "constant.numeric.json.comments.snippets" }
					}
				},
				{
					"match": "\\\\.",
					"name": "invalid.illegal.unrecognized-string-escape.json.comments.snippets"
				}
			]
		},
		"constant": {
			"match": "\\b(?>true|false|null)\\b",
			"name": "constant.language.json.comments.snippets"
		},
		"number": {
			"match": "-?+(?>0|[1-9][0-9]*+)(?>(?>\\.[0-9]++)?+(?>[eE][+-]?+[0-9]++)?+)?+",
			"name": "constant.numeric.json.comments.snippets"
		},
		"comments": {
			"patterns": [
				{
					"begin": "/\\*\\*(?!/)",
					"end": "\\*/",
					"captures": { "0": { "name": "punctuation.definition.comment.json.comments.snippets" } },
					"name": "comment.block.documentation.json.comments.snippets"
				},
				{
					"begin": "/\\*",
					"end": "\\*/",
					"captures": { "0": { "name": "punctuation.definition.comment.json.comments.snippets" } },
					"name": "comment.block.json.comments.snippets"
				},
				{
					"begin": "//",
					"end": "$",
					"beginCaptures": { "0": { "name": "punctuation.definition.comment.json.comments.snippets" } },
					"name": "comment.line.double-slash.js"
				}
			]
		}
	}
}
